name: Publish Packages CI/CD

on:
  push:
    branches:
      - '**'
  
jobs:
  stringify_packages:  
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.ref.outputs.packages }}
    steps:
      - name: Stringify packages to $GITHUB_OUTPUT
        id: ref
        run: |
          echo "packages={\"names\":[\"@angulartist/utilities\"]}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: ./.actions/node-setup
      - name: Install Dependencies
        run: |
          yarn install --immutable
      - name: Build
        run: |
          yarn build:packages
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            node_modules/
            packages/*/node_modules/
            packages/*/dist/
            .yarn

  lint:
    runs-on: ubuntu-latest
    needs: [stringify_packages, build]
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: ./.actions/node-setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Run linter
        run: |
          yarn lint:packages

  unit_test:
    runs-on: ubuntu-latest
    needs: [stringify_packages, build]
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: ./.actions/node-setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Run unit tests
        run: |
          yarn test:ci:packages

  publish-branch:
    runs-on: ubuntu-latest
    needs: [stringify_packages, lint, unit_test]
    permissions:
      actions: 'write'
    strategy:
      matrix:
        package_name: ${{ fromJSON(needs.stringify_packages.outputs.packages).names }}
    if: ${{ (github.ref != 'refs/heads/main') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup NodeJS
        uses: ./.actions/node-setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Assert package files have changed
        id: check_diff
        shell: pwsh
        run: |
          $diff = git diff --name-only HEAD^ HEAD

          $PackageName = "${{ matrix.package_name }}"
          $PackageFolderName = $PackageName.replace("@angulartist/","")

          # Check if a file under packages/path/to/package has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match "^packages/$PackageFolderName/" }
          $HasDiff = $SourceDiff.Length -gt 0

          echo "package_changed=$HasDiff" >> $env:GITHUB_OUTPUT
      - name: Setup GIT config
        if: steps.check_diff.package_changed == 'True'
        run: |
          echo "Setup GIT global config"
          git config --global user.email $ORG_EMAIL
          git config --global user.name "angulartist"
          echo "Pulling current branch"
          git pull
        env:
          ORG_EMAIL: ${{ vars.ORG_EMAIL }}
      - name: Get CI commit short SHA
        if: steps.check_diff.package_changed == 'True'
        uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - name: Release - Prerelease package
        if: steps.check_diff.package_changed == 'True'
        run: |
          yarn workspace ${{ matrix.package_name }} run release:version --prerelease next-$CI_COMMIT_SHORT_SHA
          yarn workspace ${{ matrix.package_name }} run release:publish
        env:
          NPM_TOKEN: ${{ secrets.CI_JOB_TOKEN }}
          CI_COMMIT_SHORT_SHA: ${{ env.SHA }}

  publish:
    runs-on: ubuntu-latest
    needs: [stringify_packages, lint, unit_test]
    strategy:
      matrix:
        package_name: ${{ fromJSON(needs.stringify_packages.outputs.packages).names }}
    if: ${{ (github.ref == 'refs/heads/main') }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: ./.actions/node-setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Assert package files have changed
        id: check_diff
        shell: pwsh
        run: |
          $diff = git diff --name-only HEAD^ HEAD

          $PackageName = "${{ matrix.package_name }}"
          $PackageFolderName = $PackageName.replace("@angulartist/","")

          # Check if a file under packages/path/to/package has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match "^packages/$PackageFolderName/" }
          $HasDiff = $SourceDiff.Length -gt 0

          echo "package_changed=$HasDiff" >> $env:GITHUB_OUTPUT
      - name: Setup GIT config
        if: steps.check_diff.package_changed == 'True'
        run: |
          echo "Setup GIT global config"
          git config --global user.email $ORG_EMAIL
          git config --global user.name "angulartist"
          echo "Pulling main branch"
          git pull
        env:
          ORG_EMAIL: ${{ vars.ORG_EMAIL }}
      - name: Release - Tag package
        if: steps.check_diff.package_changed == 'True'
        run: |
          yarn workspace ${{ matrix.package_name }} run release:version

          git push --follow-tags origin main
      - name: Release - Publish package
        if: steps.check_diff.package_changed == 'True'
        run: |
          yarn workspace ${{ matrix.package_name }} run release:publish
        env:
          NPM_TOKEN: ${{ secrets.CI_JOB_TOKEN }}
